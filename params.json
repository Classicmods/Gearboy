{"name":"Gearboy","tagline":"Game Boy / Game Boy Color emulator for iOS, Mac, Raspberry Pi, Windows and Linux","body":"Gearboy\r\n=======\r\n<b>Copyright &copy; 2012 by Ignacio Sanchez</b>\r\n\r\n----------\r\n[![Build Status](https://travis-ci.org/drhelius/Gearboy.svg?branch=master)](https://travis-ci.org/drhelius/Gearboy)\r\n\r\nGearboy is a Nintendo Game Boy / GameBoy Color emulator written in C++ that runs on iOS, Raspberry Pi, Mac, Windows and Linux.\r\n\r\nThe main focus of this emulator is readability of source code with very high compatibility.\r\n\r\nFollow me on Twitter for updates: http://twitter.com/drhelius\r\n\r\n----------\r\n\r\nDownloads\r\n--------\r\n- Gearboy 2.1 for Jailbroken iOS: [Cydia](http://modmyi.com/info/gearboygameboy.d.php). You can open rom files from other apps like Safari or Dropbox. They can be placed in <code>/var/mobile/Media/ROMs/GAMEBOY</code> too. Save files are placed in <code>/var/mobile/Library/Gearboy</code>\r\n- Gearboy 2.1 for Non-Jailbroken iOS: You can open rom files from other apps like Safari or Dropbox, or use [iTunes file sharing](http://support.apple.com/kb/ht4094). \r\n- Gearboy 2.1 for Mac OS X: <code>brew install homebrew/games/gearboy</code>\r\n- Gearboy 1.6 for Windows: [Gearboy-1.6-Windows.zip](http://www.geardome.com/files/gearboy/Gearboy-1.6-Windows.zip) (NOTE: You may need to install the [Microsoft Visual C++ Redistributable](http://www.microsoft.com/en-us/download/details.aspx?id=40784))\r\n- Gearboy 1.6 for Linux: [Gearboy-1.6-Linux.tar.gz](http://www.geardome.com/files/gearboy/Gearboy-0.8-Linux.tar.gz)\r\n\r\nFeatures\r\n--------\r\n- Highly accurate CPU emulation, passes cpu_instrs.gb from blargg's tests.\r\n- Accurate instruction timing, passes instr_timing.gb from blargg's tests.\r\n- Memory Bank Controllers (MBC1, MBC2, MBC3 with RTC, MBC5), ROM + RAM and multicart cartridges.\r\n- Accurate LCD controller emulation. Background, window and sprites, with correct timings and priorities.\r\n- Mix frames: Mimics the LCD ghosting effect seen in the original Game Boy.\r\n- Sound emulation using SDL Audio and [Gb_Snd_Emu library](http://slack.net/~ant/libs/audio.html#Gb_Snd_Emu).\r\n- Game Boy Color support.\r\n- Integrated disassembler. It can dump the full disassembled memory to a text file or access it in real time.\r\n- Saves battery powered RAM cartridges to file.\r\n- Compressed rom support (ZIP deflate).\r\n- Multi platform. Runs on Windows, Linux, Mac OS X, Raspberry Pi and iOS.\r\n\r\nCompiling Instructions\r\n----------------------\r\n\r\nThe best way of compiling Gearboy is by using one of the IDE projects provided for each platform.\r\n\r\nFor all desktop platforms you will need SDL 2 and Qt 5 SDKs installed and configured.\r\n\r\n### iOS\r\n- Install Xcode for Mac OS X. You need iOS SDK 8 or later. \r\n- Build the project. \r\n- Run it on real hardware using your iOS developer certificate. Make sure it compiles on Release for extra optimizations.\r\n- For jailbroken devices use the jailbreak branch.\r\n\r\n### Raspberry Pi 2 - Raspbian\r\n- Install and configure [SDL 2](http://www.libsdl.org/download-2.0.php) for development:\r\n``` shell\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\nsudo apt-get install build-essential libfreeimage-dev libopenal-dev libpango1.0-dev libsndfile-dev libudev-dev libasound2-dev libjpeg-dev libtiff5-dev libwebp-dev automake\r\ncd ~\r\nwget https://www.libsdl.org/release/SDL2-2.0.3.tar.gz\r\ntar zxvf SDL2-2.0.3.tar.gz\r\ncd SDL2-2.0.3 && mkdir build && cd build\r\n../configure --disable-pulseaudio --disable-esd --disable-video-mir --disable-video-wayland --disable-video-x11 --disable-video-opengl --host=armv7l-raspberry-linux-gnueabihf\r\nmake -j 4\r\nsudo make install\r\n```\r\n- Install libconfig library dependencies for development: <code>sudo apt-get install libconfig++-dev</code>.\r\n- Use <code>make -j 4</code> in the <code>platforms/raspberrypi2/Gearboy/</code> folder to build the project.\r\n- Use <code>export SDL_AUDIODRIVER=ALSA</code> before running the emulator for the best performance.\r\n- The emulator generates a <code>gearboy.cfg</code> configuration for you where you can customize keyboard and gamepads. Key codes are from [SDL](https://wiki.libsdl.org/SDL_Keycode).\r\n\r\n### Windows\r\n- You need Visual Studio 2010 (Express Edition will do but you won't be able to install the Qt Add-in).\r\n- Install the [Qt 5 SDK for Windows](http://qt-project.org/downloads).\r\n- Install the [Qt 5 Visual Studio Add-in](http://qt-project.org/downloads) and point it to the Qt SDK.\r\n- Install and configure [SDL 2](http://www.libsdl.org/download-2.0.php) for development.\r\n- In order to use OpenGL extensions I used [GLEW](http://glew.sourceforge.net/). This is because of a [bug](http://stackoverflow.com/questions/11845230/glgenbuffers-crashes-in-release-build) in QGLFunctions. Make sure the GLEW headers and libs are configured within VC++.\r\n- Open the Gearboy Visual Studio project and build.\r\n\r\n### Mac OS X\r\n- You need Qt Creator, included in the Qt 5 SDK.\r\n- Install Xcode and run <code>xcode-select --install</code> in the terminal for the compiler to be available on the command line.\r\n- Install the [Qt 5 SDK for Mac OS](http://qt-project.org/downloads).\r\n- Download [SDL 2](http://www.libsdl.org/download-2.0.php) source code. Then run this three commands <code>./configure</code> <code>make</code> <code>sudo make install</code> on the terminal.\r\n- Open the Gearboy Qt project and build.\r\n\r\n### Linux\r\n- You need Netbeans 7.3 or later.\r\n- Install Qt 5 development dependencies (Ubuntu: <code>sudo apt-get install qt5-default qttools5-dev-tools</code>).\r\n- Install OpenGL development dependencies (Ubuntu: <code>sudo apt-get install freeglut3-dev</code>).\r\n- Install SDL 2 development dependencies (Ubuntu: <code>sudo apt-get install libsdl2-dev</code>).\r\n- In order to use OpenGL extensions I used GLEW dependencies (Ubuntu: <code>sudo apt-get install libglew-dev</code>). This is because of a [bug](http://stackoverflow.com/questions/11845230/glgenbuffers-crashes-in-release-build) in QGLFunctions.\r\n- Open the Gearboy Netbeans project and build.\r\n- Alternatively you can use <code>make -f nbproject/Makefile-Release.mk SUBPROJECTS= .build-conf</code> to build the project.\r\n- In Ubuntu I had to <code>export SDL_AUDIODRIVER=ALSA</code> before running the emulator for the sound to work properly.\r\n\r\nAccuracy Tests\r\n------------\r\nCompared to other emulators: [see here](http://tasvideos.org/EmulatorResources/GBAccuracyTests.html). \r\n\r\nTests from [blargg's test roms](http://slack.net/~ant/old/gb-tests/):\r\n\r\n![cpu_instrs.gb](http://www.geardome.com/files/gearboy/gearboy_001.png)![insrt_timing.gb](http://www.geardome.com/files/gearboy/gearboy_002.png)![lcd_sync.gb](http://www.geardome.com/files/gearboy/gearboy_003.png)![dmg_sound.gb](http://www.geardome.com/files/gearboy/gearboy_032.png)![cgb_sound.gb](http://www.geardome.com/files/gearboy/gearboy_033.png)\r\n\r\nScreenshots\r\n-----------\r\n\r\n![Screenshot](http://www.geardome.com/files/gearboy/gearboy_004.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_006.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_008.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_022.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_013.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_023.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_015.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_029.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_011.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_024.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_017.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_016.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_034.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_026.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_018.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_025.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_021.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_027.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_019.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_020.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_031.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_028.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_007.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_009.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_010.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_005.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_012.png)![Screenshot](http://www.geardome.com/files/gearboy/gearboy_014.png)\r\n\r\nLicense\r\n-------\r\n\r\n<i>Gearboy - Nintendo Game Boy Emulator</i>\r\n\r\n<i>Copyright (C) 2012  Ignacio Sanchez</i>\r\n\r\n<i>This program is free software: you can redistribute it and/or modify</i>\r\n<i>it under the terms of the GNU General Public License as published by</i>\r\n<i>the Free Software Foundation, either version 3 of the License, or</i>\r\n<i>any later version.</i>\r\n\r\n<i>This program is distributed in the hope that it will be useful,</i>\r\n<i>but WITHOUT ANY WARRANTY; without even the implied warranty of</i>\r\n<i>MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</i>\r\n<i>GNU General Public License for more details.</i>\r\n\r\n<i>You should have received a copy of the GNU General Public License</i>\r\n<i>along with this program.  If not, see http://www.gnu.org/licenses/</i>\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}